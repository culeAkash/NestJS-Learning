generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id    String     @default(cuid()) @id
  email String  @unique
  name  String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[]
  Comment Comment[]
  Like Like[]
}

model Post {
  id        String      @default(cuid()) @id
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postImages Image[]
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id],onDelete: Cascade)
  authorId  String?
  Comment Comment[]
  Like Like[]
}

model Comment {
  id         String      @default(cuid()) @id
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  post     Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String?
  parentCommentId String?
  parentComment   Comment?    @relation("ParentComment", fields: [parentCommentId], references: [id])
  childComments   Comment[]   @relation("ParentComment")
}

model Like{
  id        String      @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user    User?    @relation(fields: [userId], references: [id])
  userId  String?
  post     Post?    @relation(fields: [postId], references: [id])
  postId   String?
}

model Image{
  id   String      @default(cuid()) @id
  imageUrl String
  post Post? @relation(fields: [postId], references: [id],onDelete: Cascade)
  postId String?
}